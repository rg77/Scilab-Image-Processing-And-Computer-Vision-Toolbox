<?xml version="1.0" encoding="UTF-8"?>

<!--
 *
 * This help file was generated from roiPoly.sci using help_from_sci().
 *
 -->

<refentry version="5.0-subset Scilab" xml:id="roiPoly" xml:lang="en"
          xmlns="http://docbook.org/ns/docbook"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:svg="http://www.w3.org/2000/svg"
          xmlns:ns3="http://www.w3.org/1999/xhtml"
          xmlns:mml="http://www.w3.org/1998/Math/MathML"
          xmlns:scilab="http://www.scilab.org"
          xmlns:db="http://docbook.org/ns/docbook">

  <refnamediv>
    <refname>roiPoly</refname>
    <refpurpose>This function creates mask by selecting the ROI as a poygon.</refpurpose>
  </refnamediv>


<refsynopsisdiv>
   <title>Calling Sequence</title>
   <synopsis>
   I = imimread(image-location)
   c = [c1 c2 ..............cn]
   r = [r1 r2 ..............rn]
   BW = roipoly(I, c, r)
   
   </synopsis>
</refsynopsisdiv>

<refsection>
   <title>Parameters</title>
   <variablelist>
   <varlistentry><term>I :</term>
      <listitem><para> Input image</para></listitem></varlistentry>
   <varlistentry><term>c :</term>
      <listitem><para> a 1xn vector specifying the column indices of the vertices of the n sided polygon</para></listitem></varlistentry>
   <varlistentry><term>r :</term>
      <listitem><para> a 1xn vector specifying the row indices of the vertices of the n sided polygon</para></listitem></varlistentry>
   <varlistentry><term>BW:</term>
      <listitem><para> Output mask image for input I</para></listitem></varlistentry>
   </variablelist>
</refsection>

<refsection>
   <title>Description</title>
   <para>
Returns the ROI specified by the polygon described by vectors c and r, which specify the column
and row indices of each vertex, respectively. c and r must be the same size.
   </para>
   <para>
</para>
</refsection>

<refsection>
   <title>Examples</title>
   <programlisting role="example"><![CDATA[
I = imread('image_01.jpeg');
c = [50 50 100 100]   //defining the column indices of the vertices of the ROI
r = [100 150 150 100 ]   //defining the corresponding row indices of the vertices of the ROI
BW = roipoly(I, c, r) //creating a mask
imshow(BW)   //viewing the mask
c=colorChange(I,mask,2.4 ,2.0, 2.2); //using this mask in colorChange function
imshow(c);

   ]]></programlisting>
</refsection>

<refsection>
   <title>Examples</title>
   <programlisting role="example"><![CDATA[
I = imread('../images/color3.jpg');
c = [ 150 200 250 300 250 200 ] ;  //defining the column indices of the vertices of the ROI
r = [ 135 100 100 135 170 170 ] ;  //defining the corresponding row indices of the vertices of the ROI
gray = rgb2gray(I) ;                           //for a grayscale image
BW = roiPoly(I, c, r); //creating a mask
imshow(BW)   //viewing the mask

   ]]></programlisting>
</refsection>

<refsection>
   <title>Examples</title>
   <programlisting role="example"><![CDATA[
I = imread('../images/color3.jpg');
c1 = [200 250 300 250  150 200 ]
r1 = [ 170 170 135 100 135 100]  //undesired output because changing the order of points
BW = roiPoly(I,c1,r1);
imshow(BW)

   ]]></programlisting>
</refsection>

<refsection>
   <title>Authors</title>
   <simplelist type="vert">
   <member>Vinay Bhat</member>
   <member>Rohan Gurve</member>
   </simplelist>
</refsection>
</refentry>
